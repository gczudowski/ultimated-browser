RELEASE_VERSION=$1
INSTALL_TYPE=$2

echo "Installing $RELEASE_VERSION in '$INSTALL_TYPE' mode"
UNAME=`uname`

if [ "$UNAME" = "Darwin" ] ; then
    SYSTEM=darwin
elif [ "$UNAME" = "Linux" ] ; then
    SYSTEM=linux
fi

if [ ! -d ~/.ultimated/packages/chromedriver236 ]; then
    echo "Downloading Chromedriver 2.36..."
    mkdir ~/.ultimated/packages/chromedriver236

    if [ "$UNAME" = "Darwin" ] ; then
        curl --progress-bar https://chromedriver.storage.googleapis.com/2.36/chromedriver_mac64.zip --output ~/.ultimated/packages/chromedriver236/chromedriver.zip
    elif [ "$UNAME" = "Linux" ] ; then
        curl --progress-bar https://chromedriver.storage.googleapis.com/2.36/chromedriver_linux64.zip --output ~/.ultimated/packages/chromedriver236/chromedriver.zip
    fi
    cd ~/.ultimated/packages/chromedriver236 && unzip chromedriver.zip && rm chromedriver.zip
    echo "Chromedriver 2.36 ready!"
fi

if [ ! -d ~/.ultimated/packages/chromedriver238 ]; then
    echo "Downloading Chromedriver 2.38..."
    mkdir ~/.ultimated/packages/chromedriver238

    if [ "$UNAME" = "Darwin" ] ; then
        curl --progress-bar https://chromedriver.storage.googleapis.com/2.38/chromedriver_mac64.zip --output ~/.ultimated/packages/chromedriver238/chromedriver.zip
    elif [ "$UNAME" = "Linux" ] ; then
        curl --progress-bar https://chromedriver.storage.googleapis.com/2.38/chromedriver_linux64.zip --output ~/.ultimated/packages/chromedriver238/chromedriver.zip
    fi
    cd ~/.ultimated/packages/chromedriver238 && unzip chromedriver.zip && rm chromedriver.zip
    echo "Chromedriver 2.38 ready!"
fi

if [ ! -d ~/.ultimated/packages/ultimated-core/$RELEASE_VERSION ]; then
    curl --progress-bar http://ultimatedtesting.com/install/ultimated-core-$RELEASE_VERSION.tar.gz --output ./ultimated.tar.gz
    tar xf ultimated.tar.gz
    rm ultimated.tar.gz
    mv ./tarball/$RELEASE_VERSION ~/.ultimated/packages/ultimated-core
    rm -r tarball
    chmod +x ~/.ultimated/packages/ultimated-core/$RELEASE_VERSION/create.sh
    chmod +x ~/.ultimated/packages/ultimated-core/$RELEASE_VERSION/update

    RELEASE_NODE_SUITE=`cat ~/.ultimated/packages/ultimated-core/$RELEASE_VERSION/release-node-suite`

    echo "RELEASE_NODE_SUITE is $RELEASE_NODE_SUITE"

    if [ ! -d ~/.ultimated/packages/node-suites/$RELEASE_NODE_SUITE ]; then
    echo "no dir ~/.ultimated/packages/node-suites/$RELEASE_NODE_SUITE"
        cd ~/.ultimated/packages

        curl --progress-bar https://nodejs.org/dist/v6.11.0/node-v6.11.0-$SYSTEM-x64.tar.gz --output ./node.tar.xz
        tar xf node.tar.xz
        rm node.tar.xz
        mv ~/.ultimated/packages/node-v6.11.0-$SYSTEM-x64 ~/.ultimated/packages/node-suites/$RELEASE_NODE_SUITE
        echo "Done"
        echo ""

        mv ~/.ultimated/packages/ultimated-core/$RELEASE_VERSION/package.json ~/.ultimated/packages/node-suites/$RELEASE_NODE_SUITE/lib

        echo "Installing packages..."
        cd ~/.ultimated/packages/node-suites/$RELEASE_NODE_SUITE/lib
        ~/.ultimated/packages/node-suites/$RELEASE_NODE_SUITE/bin/node ~/.ultimated/packages/node-suites/$RELEASE_NODE_SUITE/bin/npm install

    fi

    if [ "$INSTALL_TYPE" = "latest" ] ; then
        echo "Updating latest version..."
        if [ -d ~/.ultimated/packages/ultimated-core/latest ]; then
            rm ~/.ultimated/packages/ultimated-core/latest
        fi
        ln -s ~/.ultimated/packages/ultimated-core/$RELEASE_VERSION ~/.ultimated/packages/ultimated-core/latest
    fi

    ln -s ~/.ultimated/packages/node-suites/$RELEASE_NODE_SUITE/lib/node_modules ~/.ultimated/packages/ultimated-core/$RELEASE_VERSION/node_modules

    echo "Done"
    echo ""
else
    echo "Got proper version locally"
fi



